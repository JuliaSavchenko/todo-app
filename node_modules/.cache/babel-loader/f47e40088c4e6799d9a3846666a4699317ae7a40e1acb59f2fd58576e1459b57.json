{"ast":null,"code":"var _jsxFileName = \"/Users/zegor/Documents/edu/todo-app/src/components/Main.jsx\",\n  _s = $RefreshSig$();\nimport { Header } from './Header';\nimport { Template } from './Template';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n  const [taskList, setTaskList] = useState([]);\n  const [taskCount, setTaskCout] = useState(0);\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    setTaskList(tasks);\n  }, []);\n  useEffect(() => {\n    setTaskCout(Object.keys(taskList).length);\n  }, [taskList]);\n  const addTask = () => {\n    const newTaskItem = {\n      title: '',\n      time: '',\n      id: `${new Date().getTime()}`,\n      isComplited: false\n    };\n    setTaskList([...taskList, newTaskItem]);\n    localStorage.setItem('tasks', JSON.stringify([...taskList, newTaskItem]));\n  };\n  const removeTask = id => {\n    const resultTask = taskList.filter(task => task.id !== id);\n    setTaskList(resultTask);\n    localStorage.setItem('tasks', JSON.stringify([...resultTask]));\n    return resultTask;\n  };\n  const editTask = (id, value) => {\n    const editedTaskList = taskList.map(task => {\n      if (task.id !== id) {\n        return task;\n      } else {\n        return {\n          ...task,\n          title: value\n        };\n      }\n    });\n    console.log(editedTaskList);\n    setTaskList(editedTaskList);\n    localStorage.setItem('tasks', JSON.stringify(editedTaskList));\n  };\n  const toggleComplete = id => {\n    const isDoneArr = taskList.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          isComplited: !task.isComplited\n        };\n      }\n      return task;\n    });\n    setTaskList(isDoneArr);\n    localStorage.setItem('tasks', JSON.stringify(isDoneArr));\n  };\n  const changeTime = (id, timeValue) => {\n    console.log(id);\n    console.log(timeValue);\n    const changedTimeList = taskList.map(task => {\n      if (task.id !== id) {\n        return task;\n      } else {\n        return {\n          ...task,\n          time: timeValue\n        };\n      }\n    });\n    console.log(changedTimeList);\n    setTaskList(changedTimeList);\n    localStorage.setItem('tasks', JSON.stringify(changedTimeList));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      buttonName: 'Add New',\n      onClick: addTask,\n      taskCount: taskCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Template, {\n      taskList: taskList,\n      removeTask: removeTask,\n      editTask: editTask,\n      toggleComplete: toggleComplete,\n      changeTime: changeTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"u5pdNwUJD3Rzr/hlCg+mCmHu+HM=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Header","Template","useState","useEffect","jsxDEV","_jsxDEV","Main","_s","taskList","setTaskList","taskCount","setTaskCout","tasks","JSON","parse","localStorage","getItem","Object","keys","length","addTask","newTaskItem","title","time","id","Date","getTime","isComplited","setItem","stringify","removeTask","resultTask","filter","task","editTask","value","editedTaskList","map","console","log","toggleComplete","isDoneArr","changeTime","timeValue","changedTimeList","className","children","buttonName","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zegor/Documents/edu/todo-app/src/components/Main.jsx"],"sourcesContent":["import { Header } from './Header'\nimport { Template } from './Template'\nimport { useState, useEffect } from 'react'\n\nexport const Main = () => {\n  const [taskList, setTaskList] = useState([])\n  const [taskCount, setTaskCout] = useState(0)\n\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks')) || []\n    setTaskList(tasks)\n  }, [])\n\n  useEffect(() => {\n    setTaskCout(Object.keys(taskList).length)\n  }, [taskList])\n\n  const addTask = () => {\n    const newTaskItem = {\n      title: '',\n      time: '',\n      id: `${new Date().getTime()}`,\n      isComplited: false,\n    }\n\n    setTaskList([...taskList, newTaskItem])\n\n    localStorage.setItem('tasks', JSON.stringify([...taskList, newTaskItem]))\n  }\n\n  const removeTask = (id) => {\n\n    const resultTask = taskList.filter((task) => task.id !== id)\n    setTaskList(resultTask)\n    localStorage.setItem('tasks', JSON.stringify([...resultTask]))\n    return resultTask\n  }\n\n  const editTask = (id, value) => {\n\n    const editedTaskList = taskList.map((task) => {\n      if (task.id !== id) {\n        return task\n      } else {\n        return { ...task, title: value }\n      }\n    })\n\n    console.log(editedTaskList);\n    setTaskList(editedTaskList)\n\n    localStorage.setItem('tasks', JSON.stringify(editedTaskList))\n  }\n\n  const toggleComplete = (id) => {\n    const isDoneArr = taskList.map((task) => {\n      if (task.id === id) {\n        return { ...task, isComplited: !task.isComplited }\n      }\n      return task\n    })\n\n    setTaskList(isDoneArr)\n\n    localStorage.setItem('tasks', JSON.stringify(isDoneArr))\n  }\n\n  const changeTime = (id, timeValue) => {\n      console.log(id)\n      console.log(timeValue)\n    const changedTimeList = taskList.map(task => {\n      if (task.id !== id) {\n        return task\n      } else {\n        return { ...task, time: timeValue }\n      }\n    })\n    console.log(changedTimeList);\n    setTaskList(changedTimeList)\n\n    localStorage.setItem('tasks', JSON.stringify(changedTimeList))\n  }\n\n  return (\n    <div className=\"App-container\">\n      <Header buttonName={'Add New'} onClick={addTask} taskCount={taskCount} />\n      <Template\n        taskList={taskList}\n        removeTask={removeTask}\n        editTask={editTask}\n        toggleComplete={toggleComplete}\n        changeTime={changeTime}\n      />\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}